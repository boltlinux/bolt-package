#!/usr/bin/env python3
# -*- encoding: utf-8 -*-
#
# The MIT License (MIT)
#
# Copyright (c) 2016 Tobias Koch <tobias.koch@gmail.com>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
#

import os
import sys
import getopt

# make repo-tool relocatable
INSTALL_DIR = os.path.normpath(os.path.dirname(
    os.path.realpath(sys.argv[0])) + os.sep + ".." )
sys.path.insert(1, INSTALL_DIR + os.sep + 'lib')

from org.boltlinux.error import BoltError, InvocationError
from org.boltlinux.package.appconfig import AppConfig
from org.boltlinux.repository.upstream import UpstreamRepo
from org.boltlinux.repository.packagerules import PackageRules
from org.boltlinux.repository.flaskapp import app, db, app_init
from org.boltlinux.repository.models import *
from org.boltlinux.package.version import VERSION as BOLT_VERSION

BOLT_ERR_INVOCATION = 1
BOLT_ERR_RUNTIME    = 2

if __name__ == "__main__":
    # LOAD APP CONFIG
    config = AppConfig.instance().load_user_config()

    # CONFIGURE APP
    app_config = config\
            .get("apps", {})\
            .get("repository", {})\
            .get("appconfig", {})

    app_config.setdefault("SQLALCHEMY_DATABASE_URI",
            "sqlite:///" + AppConfig.get_config_folder() + os.sep + "repository.db")

    # INITIALIZE DATABASE
    app_init(app_config)
    db.init_app(app)

    with app.app_context():
        db.create_all()

    # UPDATE DEBIAN SOURCES
#    upstream = UpstreamRepo(config)
#    upstream.update_repository_db(
#        upstream.refresh_sources_lists()
#    )

    # UPDATE PACKAGE RULES
    pkg_rules = PackageRules(config)
    pkg_rules.update_repository_db(
#        pkg_rules.refresh_package_rules()
    )
#end if

